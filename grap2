{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyOC/Qrl5WqWAErojDqoe673",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/GuadalupeVargas07/EDA/blob/main/Untitled2.ipynb\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "2VK-44-HuE2J",
        "outputId": "799f6dbf-ed0a-4435-b285-31ffee621162"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "--- Menú de Grafos No Dirigidos Ponderados ---\n",
            "1. Añadir vértice\n",
            "2. Añadir arista\n",
            "3. Eliminar vértice\n",
            "4. Mostrar lista de adyacencia\n",
            "5. Mostrar matriz de adyacencia\n",
            "6. Generar imagen del grafo\n",
            "7. Salir\n",
            "Selecciona una opción: 1\n",
            "Ingresa el número del vértice a añadir: 1\n",
            "Vértice 1 añadido.\n",
            "\n",
            "--- Menú de Grafos No Dirigidos Ponderados ---\n",
            "1. Añadir vértice\n",
            "2. Añadir arista\n",
            "3. Eliminar vértice\n",
            "4. Mostrar lista de adyacencia\n",
            "5. Mostrar matriz de adyacencia\n",
            "6. Generar imagen del grafo\n",
            "7. Salir\n",
            "Selecciona una opción: 1\n",
            "Ingresa el número del vértice a añadir: 2\n",
            "Vértice 2 añadido.\n",
            "\n",
            "--- Menú de Grafos No Dirigidos Ponderados ---\n",
            "1. Añadir vértice\n",
            "2. Añadir arista\n",
            "3. Eliminar vértice\n",
            "4. Mostrar lista de adyacencia\n",
            "5. Mostrar matriz de adyacencia\n",
            "6. Generar imagen del grafo\n",
            "7. Salir\n",
            "Selecciona una opción: 1\n",
            "Ingresa el número del vértice a añadir: 3\n",
            "Vértice 3 añadido.\n",
            "\n",
            "--- Menú de Grafos No Dirigidos Ponderados ---\n",
            "1. Añadir vértice\n",
            "2. Añadir arista\n",
            "3. Eliminar vértice\n",
            "4. Mostrar lista de adyacencia\n",
            "5. Mostrar matriz de adyacencia\n",
            "6. Generar imagen del grafo\n",
            "7. Salir\n",
            "Selecciona una opción: 1\n",
            "Ingresa el número del vértice a añadir: 4\n",
            "Vértice 4 añadido.\n",
            "\n",
            "--- Menú de Grafos No Dirigidos Ponderados ---\n",
            "1. Añadir vértice\n",
            "2. Añadir arista\n",
            "3. Eliminar vértice\n",
            "4. Mostrar lista de adyacencia\n",
            "5. Mostrar matriz de adyacencia\n",
            "6. Generar imagen del grafo\n",
            "7. Salir\n",
            "Selecciona una opción: 2\n",
            "Ingresa el primer vértice: 1\n",
            "Ingresa el segundo vértice: 2\n",
            "Ingresa el peso de la arista: 3\n",
            "Arista entre 1 y 2 con peso 3 añadida.\n",
            "\n",
            "--- Menú de Grafos No Dirigidos Ponderados ---\n",
            "1. Añadir vértice\n",
            "2. Añadir arista\n",
            "3. Eliminar vértice\n",
            "4. Mostrar lista de adyacencia\n",
            "5. Mostrar matriz de adyacencia\n",
            "6. Generar imagen del grafo\n",
            "7. Salir\n",
            "Selecciona una opción: 2\n",
            "Ingresa el primer vértice: 2\n",
            "Ingresa el segundo vértice: 3\n",
            "Ingresa el peso de la arista: 454\n",
            "Arista entre 2 y 3 con peso 454 añadida.\n",
            "\n",
            "--- Menú de Grafos No Dirigidos Ponderados ---\n",
            "1. Añadir vértice\n",
            "2. Añadir arista\n",
            "3. Eliminar vértice\n",
            "4. Mostrar lista de adyacencia\n",
            "5. Mostrar matriz de adyacencia\n",
            "6. Generar imagen del grafo\n",
            "7. Salir\n",
            "Selecciona una opción: 2\n",
            "Ingresa el primer vértice: 3\n",
            "Ingresa el segundo vértice: 4\n",
            "Ingresa el peso de la arista: 345\n",
            "Arista entre 3 y 4 con peso 345 añadida.\n",
            "\n",
            "--- Menú de Grafos No Dirigidos Ponderados ---\n",
            "1. Añadir vértice\n",
            "2. Añadir arista\n",
            "3. Eliminar vértice\n",
            "4. Mostrar lista de adyacencia\n",
            "5. Mostrar matriz de adyacencia\n",
            "6. Generar imagen del grafo\n",
            "7. Salir\n",
            "Selecciona una opción: 4\n",
            "\n",
            "Lista de adyacencia:\n",
            "1: 2 (peso 3)\n",
            "2: 1 (peso 3), 3 (peso 454)\n",
            "3: 2 (peso 454), 4 (peso 345)\n",
            "4: 3 (peso 345)\n",
            "\n",
            "--- Menú de Grafos No Dirigidos Ponderados ---\n",
            "1. Añadir vértice\n",
            "2. Añadir arista\n",
            "3. Eliminar vértice\n",
            "4. Mostrar lista de adyacencia\n",
            "5. Mostrar matriz de adyacencia\n",
            "6. Generar imagen del grafo\n",
            "7. Salir\n",
            "Selecciona una opción: 5\n",
            "\n",
            "Matriz de adyacencia:\n",
            "[0, 3, 0, 0]\n",
            "[3, 0, 454, 0]\n",
            "[0, 454, 0, 345]\n",
            "[0, 0, 345, 0]\n",
            "\n",
            "--- Menú de Grafos No Dirigidos Ponderados ---\n",
            "1. Añadir vértice\n",
            "2. Añadir arista\n",
            "3. Eliminar vértice\n",
            "4. Mostrar lista de adyacencia\n",
            "5. Mostrar matriz de adyacencia\n",
            "6. Generar imagen del grafo\n",
            "7. Salir\n",
            "Selecciona una opción: 6\n",
            "Ingresa el nombre del archivo para guardar la imagen (sin extensión): eh\n",
            "Imagen del grafo generada como eh.png.\n",
            "\n",
            "--- Menú de Grafos No Dirigidos Ponderados ---\n",
            "1. Añadir vértice\n",
            "2. Añadir arista\n",
            "3. Eliminar vértice\n",
            "4. Mostrar lista de adyacencia\n",
            "5. Mostrar matriz de adyacencia\n",
            "6. Generar imagen del grafo\n",
            "7. Salir\n"
          ]
        }
      ],
      "source": [
        "import graphviz\n",
        "\n",
        "class Graph:\n",
        "    def __init__(self):\n",
        "        self.graph = {}\n",
        "\n",
        "    def add_vertex(self, vertex):\n",
        "        if vertex not in self.graph:\n",
        "            self.graph[vertex] = []\n",
        "\n",
        "    def add_edge(self, vertex1, vertex2, weight):\n",
        "        if vertex1 in self.graph and vertex2 in self.graph:\n",
        "            # Añadir la arista con el peso\n",
        "            self.graph[vertex1].append((vertex2, weight))\n",
        "            self.graph[vertex2].append((vertex1, weight))  # Grafo no dirigido\n",
        "\n",
        "    def remove_vertex(self, vertex):\n",
        "        if vertex in self.graph:\n",
        "            del self.graph[vertex]\n",
        "            for v in self.graph:\n",
        "                self.graph[v] = [n for n in self.graph[v] if n[0] != vertex]\n",
        "\n",
        "    def print_adjacency_list(self):\n",
        "        for vertex in self.graph:\n",
        "            edges = ', '.join([f\"{neighbor} (peso {weight})\" for neighbor, weight in self.graph[vertex]])\n",
        "            print(f\"{vertex}: {edges}\")\n",
        "\n",
        "    def print_adjacency_matrix(self):\n",
        "        vertices = sorted(self.graph.keys())\n",
        "        n = len(vertices)\n",
        "        matrix = [[0] * n for _ in range(n)]\n",
        "        for i, v1 in enumerate(vertices):\n",
        "            for neighbor, weight in self.graph[v1]:\n",
        "                j = vertices.index(neighbor)\n",
        "                matrix[i][j] = weight  # Guardar el peso en la matriz\n",
        "        for row in matrix:\n",
        "            print(row)\n",
        "\n",
        "    def generate_graphviz_image(self, filename=\"graph\"):\n",
        "        dot = graphviz.Graph(comment='Undirected Weighted Graph')\n",
        "        for vertex in self.graph:\n",
        "            dot.node(str(vertex))\n",
        "        for vertex in self.graph:\n",
        "            for neighbor, weight in self.graph[vertex]:\n",
        "                if vertex < neighbor:  # Evitar añadir aristas dos veces\n",
        "                    dot.edge(str(vertex), str(neighbor), label=str(weight))\n",
        "        dot.render(filename, format='png', view=True)\n",
        "\n",
        "def menu():\n",
        "    graph = Graph()\n",
        "\n",
        "    while True:\n",
        "        print(\"\\n--- Menú de Grafos No Dirigidos Ponderados ---\")\n",
        "        print(\"1. Añadir vértice\")\n",
        "        print(\"2. Añadir arista\")\n",
        "        print(\"3. Eliminar vértice\")\n",
        "        print(\"4. Mostrar lista de adyacencia\")\n",
        "        print(\"5. Mostrar matriz de adyacencia\")\n",
        "        print(\"6. Generar imagen del grafo\")\n",
        "        print(\"7. Salir\")\n",
        "\n",
        "        choice = input(\"Selecciona una opción: \")\n",
        "\n",
        "        if choice == '1':\n",
        "            vertex = input(\"Ingresa el número del vértice a añadir: \")\n",
        "            if vertex.isdigit():\n",
        "                graph.add_vertex(int(vertex))\n",
        "                print(f\"Vértice {vertex} añadido.\")\n",
        "            else:\n",
        "                print(\"Por favor, ingresa un número válido.\")\n",
        "        elif choice == '2':\n",
        "            vertex1 = input(\"Ingresa el primer vértice: \")\n",
        "            vertex2 = input(\"Ingresa el segundo vértice: \")\n",
        "            weight = input(\"Ingresa el peso de la arista: \")\n",
        "            if vertex1.isdigit() and vertex2.isdigit() and weight.isdigit():\n",
        "                graph.add_edge(int(vertex1), int(vertex2), int(weight))\n",
        "                print(f\"Arista entre {vertex1} y {vertex2} con peso {weight} añadida.\")\n",
        "            else:\n",
        "                print(\"Por favor, ingresa números válidos.\")\n",
        "        elif choice == '3':\n",
        "            vertex = input(\"Ingresa el vértice a eliminar: \")\n",
        "            if vertex.isdigit():\n",
        "                graph.remove_vertex(int(vertex))\n",
        "                print(f\"Vértice {vertex} eliminado.\")\n",
        "            else:\n",
        "                print(\"Por favor, ingresa un número válido.\")\n",
        "        elif choice == '4':\n",
        "            print(\"\\nLista de adyacencia:\")\n",
        "            graph.print_adjacency_list()\n",
        "        elif choice == '5':\n",
        "            print(\"\\nMatriz de adyacencia:\")\n",
        "            graph.print_adjacency_matrix()\n",
        "        elif choice == '6':\n",
        "            filename = input(\"Ingresa el nombre del archivo para guardar la imagen (sin extensión): \")\n",
        "            graph.generate_graphviz_image(filename)\n",
        "            print(f\"Imagen del grafo generada como {filename}.png.\")\n",
        "        elif choice == '7':\n",
        "            print(\"Saliendo...\")\n",
        "            break\n",
        "        else:\n",
        "            print(\"Opción no válida. Por favor, selecciona otra.\")\n",
        "\n",
        "if __name__ == \"__main__\":\n",
        "    menu()1"
      ]
    }
  ]
}
